%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/kunalmenda/Google Drive/2016 Spring/E160/E160/Jaguar_BaseCode_03_alt/bin/x86/Release/JaguarData_2016-2-24-58.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/02/24 21:03:29

%% Initialize variables.
filename = '/Users/kunalmenda/Google Drive/2016 Spring/E160/E160/Jaguar_BaseCode_03_alt/bin/x86/Release/JaguarData_2016-2-24-58.txt';
delimiter = ' ';

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true,  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
time = dataArray{:, 1};
desRotL = dataArray{:, 2};
wheelDistL = dataArray{:, 3};
desRotR = dataArray{:, 4};
wheelDistR = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter formatSpec fileID dataArray ans;

% Compute Moving average

% avg_size = 5;
% lavg = 0;
% ravg = 0;
% l_avg_mat = zeros(avg_size, 1);
% r_avg_mat = zeros(avg_size, 1);
% 
%  for i = 1:length(time)-avg_size
%     for n = 1:avg_size
%         if n== avg_size
%             l_avg_mat(n) = wheelDistL(i);
%             r_avg_mat(n) = wheelDistR(i);
%        
%         else
%             l_avg_mat(n) = l_avg_mat(n+1);
%             r_avg_mat(n) = r_avg_mat(n+1);
%         end
%         lavg = mean(l_avg_mat);
%         ravg = mean(r_avg_mat);
%     end
% end

size = 7;
kernel = ones(1,size)/size;
movavgL = conv(wheelDistL,kernel,'same');
movavgR = conv(wheelDistR,kernel,'same');

plot(time,wheelDistL,time,movavgL);